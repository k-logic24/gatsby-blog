{"version":3,"sources":["webpack:///./node_modules/clsx/dist/clsx.m.js","webpack:///./src/components/atoms/tag-label.tsx","webpack:///./src/components/organisms/search.tsx","webpack:///./src/components/pages/Top/Main.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/molecules/bio.tsx","webpack:///./src/components/organisms/footer.tsx","webpack:///./src/components/shared/image.tsx","webpack:///./src/components/organisms/cat.tsx","webpack:///./src/components/molecules/item.tsx","webpack:///./src/components/organisms/tag.tsx"],"names":["toVal","mix","k","y","str","Array","isArray","length","TagLabel","fieldValue","totalCount","variant","size","tmp","x","i","arguments","clsx","className","to","Search","posts","useState","searchData","setSearchData","type","placeholder","onInput","event","target","HTMLInputElement","keyword","value","toLowerCase","data","filter","post","frontmatter","title","fields","slug","indexOf","handleInputSearch","map","key","itemProp","content","date","Main","setPosts","tagGroup","setTagGroup","catGroup","setCatGroup","useEffect","allMarkdownRemark","nodes","isText","slice","id","src","hero","childImageSharp","fluid","tags","BlogIndex","Bio","useStaticQuery","author","site","siteMetadata","social","avatar","fixed","alt","name","imgStyle","borderRadius","href","twitter","rel","github","Footer","Date","getFullYear","Img","assetUrl","allImageSharp","find","n","originalName","Cat","Item","itemScope","itemType","tag","index","Tag"],"mappings":"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","file":"component---src-pages-index-tsx-7e193e3d8a7f27db774a.js","sourcesContent":["function toVal(mix) {\n  var k,\n      y,\n      str = '';\n\n  if (typeof mix === 'string' || typeof mix === 'number') {\n    str += mix;\n  } else if (typeof mix === 'object') {\n    if (Array.isArray(mix)) {\n      for (k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n          if (y = toVal(mix[k])) {\n            str && (str += ' ');\n            str += y;\n          }\n        }\n      }\n    } else {\n      for (k in mix) {\n        if (mix[k]) {\n          str && (str += ' ');\n          str += k;\n        }\n      }\n    }\n  }\n\n  return str;\n}\n\nexport default function () {\n  var i = 0,\n      tmp,\n      x,\n      str = '';\n\n  while (i < arguments.length) {\n    if (tmp = arguments[i++]) {\n      if (x = toVal(tmp)) {\n        str && (str += ' ');\n        str += x;\n      }\n    }\n  }\n\n  return str;\n}","import React from 'react'\nimport { Link } from 'gatsby'\nimport clsx from 'clsx'\n\nimport { AppProps } from '@/types'\n\nconst TagLabel: React.FC<AppProps['taglabel']> = ({\n  fieldValue,\n  totalCount,\n  variant,\n}) => {\n  const size = clsx(\n    'post-tag',\n    variant === 'sm' && 'post-tag--sm',\n    variant === 'lg' && 'post-tag--lg'\n  )\n\n  return (\n    <Link className={size} to={`/tag/${fieldValue}`}>\n      {fieldValue}\n      {totalCount && <span className=\"inline-block ml-2\">({totalCount})</span>}\n    </Link>\n  )\n}\n\nexport default TagLabel\n","import React, { useState } from 'react'\nimport { Link } from 'gatsby'\n\nimport { PostProps } from '@/types'\n\nconst Search: React.FC<{ posts: PostProps }> = ({ posts }) => {\n  const [searchData, setSearchData] = useState<\n    GatsbyTypes.SearchQuery['allMarkdownRemark']['nodes']\n  >([])\n  const handleInputSearch = (target: EventTarget) => {\n    if (target instanceof HTMLInputElement) {\n      const keyword = target.value.toLowerCase()\n      if (keyword) {\n        const data = posts.filter(post => {\n          const target = `\n          ${post.frontmatter?.title?.toLowerCase()}\n          ${post.fields?.slug?.toLowerCase()}\n        `\n          return target.indexOf(keyword) !== -1\n        })\n        setSearchData(data)\n        return\n      }\n      setSearchData([])\n    }\n  }\n\n  return (\n    <div className=\"search\">\n      <div className=\"text-center pb-2 md:py-4 search-wrap\">\n        <input\n          className=\"search__input\"\n          type=\"text\"\n          placeholder=\"keyword\"\n          onInput={event => handleInputSearch(event.target)}\n        />\n      </div>\n      <p className=\"text-sm text-center mb-4\">{searchData.length}件ヒット！</p>\n      <ul className=\"max-w-screen-sm mx-auto search-list\">\n        {searchData.map(x => (\n          <li key={x.fields?.slug}>\n            <dl>\n              <div className=\"flex items-center text-sm md:text-base\">\n                <dt className=\"mr-4 text-sm whitespace-nowrap\">\n                  <span itemProp=\"datePublished\" content={x.frontmatter?.date}>\n                    {x.frontmatter?.date}\n                  </span>\n                </dt>\n                <Link\n                  className=\"hover:text-accent transition-colors flex-1 font-bold underline\"\n                  to={`/blog${x.fields?.slug}`}\n                >\n                  <dd>{x.frontmatter?.title}</dd>\n                </Link>\n              </div>\n            </dl>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Search\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'gatsby'\n\nimport Header from '@/components/organisms/header'\nimport Footer from '@/components/organisms/footer'\nimport Fv from '@/components/organisms/fv'\nimport Seo from '@/components/shared/seo'\nimport Item from '@/components/molecules/item'\nimport Search from '@/components/organisms/search'\nimport Tag from '@/components/organisms/tag'\nimport Cat from '@/components/organisms/cat'\nimport {\n  BlogIndexProps,\n  BlogTagGroupProps,\n  BlogCatGroupProps,\n  PostProps,\n} from '@/types'\n\nconst Main: React.FC<BlogIndexProps> = ({ title, data }) => {\n  const [posts, setPosts] = useState<PostProps>([])\n  const [tagGroup, setTagGroup] = useState<BlogTagGroupProps | []>([])\n  const [catGroup, setCatGroup] = useState<BlogCatGroupProps | []>([])\n\n  useEffect(() => {\n    const { nodes, tagGroup, catGroup } = data.allMarkdownRemark\n    setPosts(nodes)\n    setTagGroup(tagGroup)\n    setCatGroup(catGroup)\n  }, [])\n\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <Fv title={title} isText={true} />\n      <main className=\"py-8 md:py-12 px-4 mx-auto max-w-screen-lg\">\n        <Seo title=\"Home\" />\n        <div className=\"section home\">\n          <div className=\"section-wrap\">\n            <div className=\"text-center\">\n              <h1 className=\"pb-4 mb-10 section__ttl\">最新の記事</h1>\n            </div>\n            {posts.length ? (\n              <>\n                <ul className=\"blog-list\">\n                  {posts.slice(0, 6).map(post => (\n                    <Item\n                      key={post.id}\n                      title={post.frontmatter?.title || post.fields?.slug}\n                      src={post?.frontmatter?.hero?.childImageSharp?.fluid}\n                      slug={post.fields?.slug}\n                      date={post.frontmatter?.date}\n                      tags={post.frontmatter?.tags}\n                      variant={'sm'}\n                    />\n                  ))}\n                </ul>\n                <div className=\"pt-8 text-center\">\n                  <Link className=\"link link--more\" to=\"/blog\">\n                    もっとみる\n                  </Link>\n                </div>\n              </>\n            ) : (\n              <p>no posts...</p>\n            )}\n          </div>\n          <div className=\"section-wrap\">\n            <div className=\"text-center\">\n              <h1 className=\"pb-4 mb-10 section__ttl\">検索</h1>\n            </div>\n            <Search posts={posts} />\n          </div>\n          <div className=\"section-wrap\">\n            <Tag tagGroup={tagGroup} />\n          </div>\n          <div className=\"section-wrap\">\n            <Cat catGroup={catGroup} />\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Main\n","import React from 'react'\nimport { graphql, PageProps } from 'gatsby'\n\nimport Main from '@/components/pages/Top/Main'\n\nconst BlogIndex: React.FC<PageProps<GatsbyTypes.BlogIndexQuery>> = ({\n  data,\n}) => {\n  return <Main title=\"Hi!Dear\" data={data} />\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          hero {\n            childImageSharp {\n              fluid(maxWidth: 900) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n          tags\n        }\n        id\n      }\n      catGroup: group(field: frontmatter___category) {\n        fieldValue\n        totalCount\n      }\n      tagGroup: group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nconst Bio: React.FC = () => {\n  const data = useStaticQuery<GatsbyTypes.BioQuery>(graphql`\n    query Bio {\n      avatar: file(absolutePath: { regex: \"/avatar.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50, quality: 95) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n          social {\n            twitter\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  const author = data.site?.siteMetadata?.author\n  const social = data.site?.siteMetadata?.social\n  const avatar = data?.avatar?.childImageSharp?.fixed\n\n  return (\n    <div className=\"flex\">\n      {avatar && (\n        <Image\n          fixed={avatar}\n          alt={author?.name || ``}\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n        />\n      )}\n      {author?.name && (\n        <ul className=\"bio-list\">\n          <li>\n            <a\n              className=\"bio-list__link anim-link\"\n              href={`https://twitter.com/${social?.twitter || ``}`}\n              target=\"_blank\"\n              rel=\"noopenner noreferrer\"\n            >\n              Twitter\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"bio-list__link anim-link\"\n              href={`https://github.com/${social?.github || ``}`}\n              target=\"_blank\"\n              rel=\"noopenner noreferrer\"\n            >\n              GitHub\n            </a>\n          </li>\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react'\n\nimport Bio from '@/components/molecules/bio'\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"bg-gray-light\">\n      <div className=\"py-4 flex justify-between container\">\n        <Bio />\n        <small className=\"self-end text-white\">\n          &copy; {new Date().getFullYear()} K.Iwata\n        </small>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\ninterface ImgProps {\n  assetUrl: string\n  alt: string\n}\n\nconst Img: React.FC<ImgProps> = ({ assetUrl, alt }) => {\n  const { allImageSharp } = useStaticQuery<GatsbyTypes.ImgQuery>(graphql`\n    query Img {\n      allImageSharp {\n        nodes {\n          fluid(maxWidth: 1600) {\n            originalName\n            ...GatsbyImageSharpFluid_withWebp\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Image\n      fluid={\n        allImageSharp.nodes.find(n => n.fluid?.originalName === assetUrl)?.fluid\n      }\n      alt={alt}\n    />\n  )\n}\n\nexport default Img\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Img from '@/components/shared/image'\nimport { BlogCatGroupProps } from '@/types'\n\nconst Cat: React.FC<{ catGroup: BlogCatGroupProps }> = ({ catGroup }) => {\n  return (\n    <section className=\"text-center\">\n      <h1 className=\"pb-4 mb-10 section__ttl\">カテゴリー</h1>\n      <ul className=\"cat-list\">\n        {catGroup.map(({ fieldValue }) => (\n          <li key={fieldValue}>\n            <Link className=\"cat-list__link\" to={`/cat/${fieldValue}`}>\n              <figure className=\"cat-list__imgwrap\">\n                <Img assetUrl={`cat-${fieldValue}.jpg`} alt={``} />\n              </figure>\n              <p className=\"cat-list__txt\">{fieldValue}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default Cat\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport TagLabel from '@/components/atoms/tag-label'\nimport { AppProps } from '@/types'\n\nconst Item: React.FC<AppProps['item']> = ({\n  title,\n  date,\n  slug,\n  src,\n  tags,\n  variant,\n}) => {\n  return (\n    <li key={slug}>\n      <article itemScope itemType=\"http://schema.org/Article\">\n        <figure className=\"overflow-hidden rounded relative blog-list__imgwrap\">\n          <Link\n            to={`/blog${slug!}`}\n            className=\"block transition-transform duration-700 ease-out\"\n            itemProp=\"url\"\n          >\n            <Image fluid={src!} alt=\"\" />\n          </Link>\n          <p className=\"blog-list__date\">\n            <span itemProp=\"datePublished\" content={date}>\n              {date}\n            </span>\n          </p>\n        </figure>\n        <h2 className=\"blog-list__ttl\">\n          <Link\n            to={`/blog${slug!}`}\n            itemProp=\"url\"\n            className=\"block hover:opacity-60 transition-opacity\"\n          >\n            <span itemProp=\"headline\">{title}</span>\n          </Link>\n        </h2>\n        <div className=\"mt-1\">\n          <ul className=\"blog-list-taglist\">\n            {tags &&\n              tags.map((tag, index) => (\n                <li key={index}>\n                  <TagLabel fieldValue={tag} variant={variant} />\n                </li>\n              ))}\n          </ul>\n        </div>\n      </article>\n    </li>\n  )\n}\n\nexport default Item\n","import React from 'react'\n\nimport TagLabel from '@/components/atoms/tag-label'\nimport { BlogTagGroupProps } from '@/types'\n\nconst Tag: React.FC<{ tagGroup: BlogTagGroupProps }> = ({ tagGroup }) => {\n  return (\n    <div className=\"max-w-screen-md mx-auto px-4 py-8 bg-gray-tag dark:bg-white rounded-lg\">\n      <div className=\"text-center\">\n        <h1 className=\"pb-4 mb-10 text-gray section__ttl\">タグ</h1>\n      </div>\n      <ul className=\"tag-list\">\n        {tagGroup.map(({ fieldValue, totalCount }) => (\n          <li key={fieldValue}>\n            <TagLabel fieldValue={fieldValue!} totalCount={totalCount} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Tag\n"],"sourceRoot":""}