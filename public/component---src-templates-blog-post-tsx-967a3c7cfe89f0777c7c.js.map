{"version":3,"sources":["webpack:///./src/templates/blog-post.tsx"],"names":["BlogPostTemplate","data","pageContext","post","markdownRemark","postTitle","frontmatter","title","postDate","date","src","hero","childImageSharp","fluid","tableOfContents","previous","next","isText","description","excerpt","className","itemScope","itemType","alt","dangerouslySetInnerHTML","__html","html","itemProp","to","fields","slug","rel","icon","faChevronLeft","style","marginLeft","marginRight","faChevronRight"],"mappings":"2FAAA,iHAsGeA,UAlFmC,SAAC,GAA0B,0BAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACnDC,EAAOF,EAAKG,eACZC,EAAYF,SAAH,UAAGA,EAAMG,mBAAT,aAAG,EAAmBC,MAC/BC,EAAWL,SAAH,UAAGA,EAAMG,mBAAT,aAAG,EAAmBG,KAC9BC,EAAMP,SAAH,UAAGA,EAAMG,mBAAT,iBAAG,EAAmBK,YAAtB,iBAAG,EAAyBC,uBAA5B,aAAG,EAA0CC,MAChDC,GAAkBX,aAAA,EAAAA,EAAMW,kBAAmB,GACzCC,EAAmBb,EAAnBa,SAAUC,EAASd,EAATc,KAElB,OACE,kBAAC,IAAD,CAAQT,MAAOF,EAAWI,KAAMD,EAAUS,QAAQ,GAChD,kBAAC,IAAD,CACEV,MAAOJ,SAAF,UAAEA,EAAMG,mBAAR,aAAE,EAAmBC,MAC1BW,aAAaf,SAAA,UAAAA,EAAMG,mBAAN,eAAmBY,eAAef,aAAlC,EAAkCA,EAAMgB,WAEvD,6BACEC,UAAU,oCACVC,WAAS,EACTC,SAAS,6BAET,yBAAKF,UAAU,QACb,wBAAIA,UAAU,gDACXf,GAEH,0BAAMe,UAAU,0BAA0BZ,IAE5C,yBAAKY,UAAU,QACb,kBAAC,IAAD,CAAOP,MAAOH,EAAMa,IAAI,MAEzBT,GACC,yBACEM,UAAU,MACVI,wBAAyB,CAAEC,OAAQX,KAGvC,6BACEM,UAAU,qBACVI,wBAAyB,CAAEC,OAAQtB,aAAF,EAAEA,EAAMuB,MACzCC,SAAS,gBAEX,yBAAKP,UAAU,kCACb,wBAAIA,UAAU,wBACZ,wBAAIA,UAAU,YACXL,GACC,kBAAC,OAAD,CACEa,GAAE,SAAUb,SAAV,UAAUA,EAAUc,cAApB,aAAU,EAAkBC,MAC9BC,IAAI,OACJX,UAAU,yBAEV,kBAAC,IAAD,CACEY,KAAMC,IACNb,UAAU,0BAEZ,0BAAMc,MAAO,CAAEC,WAAY,UACxBpB,SADH,UACGA,EAAUT,mBADb,aACG,EAAuBC,SAKhC,wBAAIa,UAAU,YACXJ,GACC,kBAAC,OAAD,CACEY,GAAE,SAAUZ,SAAV,UAAUA,EAAMa,cAAhB,aAAU,EAAcC,MAC1BC,IAAI,OACJX,UAAU,yBAEV,0BAAMc,MAAO,CAAEE,YAAa,UACzBpB,SADH,UACGA,EAAMV,mBADT,aACG,EAAmBC,OAEtB,kBAAC,IAAD,CACEyB,KAAMK,IACNjB,UAAU","file":"component---src-templates-blog-post-tsx-967a3c7cfe89f0777c7c.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport Layout from '@/layouts/default'\nimport Seo from '@/components/seo'\n\ninterface BlogPostProps {\n  data: GatsbyTypes.BlogPostBySlugQuery\n  pageContext: {\n    previous: GatsbyTypes.MarkdownRemarkEdge['previous']\n    next: GatsbyTypes.MarkdownRemarkEdge['next']\n  }\n}\n\nconst BlogPostTemplate: React.FC<BlogPostProps> = ({ data, pageContext }) => {\n  const post = data.markdownRemark\n  const postTitle = post?.frontmatter?.title\n  const postDate = post?.frontmatter?.date\n  const src = post?.frontmatter?.hero?.childImageSharp?.fluid\n  const tableOfContents = post?.tableOfContents || ''\n  const { previous, next } = pageContext\n\n  return (\n    <Layout title={postTitle} date={postDate} isText={false}>\n      <Seo\n        title={post?.frontmatter?.title}\n        description={post?.frontmatter?.description || post?.excerpt}\n      />\n      <article\n        className=\"max-w-screen-md mx-auto blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <div className=\"mb-6\">\n          <h1 className=\"font-bold text-xl md:text-2xl blog-post__ttl\">\n            {postTitle}\n          </h1>\n          <span className=\"text-xs text-secondary\">{postDate}</span>\n        </div>\n        <div className=\"mb-8\">\n          <Image fluid={src!} alt=\"\" />\n        </div>\n        {tableOfContents && (\n          <div\n            className=\"toc\"\n            dangerouslySetInnerHTML={{ __html: tableOfContents }}\n          ></div>\n        )}\n        <section\n          className=\"blog-post-contents\"\n          dangerouslySetInnerHTML={{ __html: post?.html as string }}\n          itemProp=\"articleBody\"\n        />\n        <nav className=\"hidden md:block pt-12 paginate\">\n          <ul className=\"flex justify-between\">\n            <li className=\"md:w-1/3\">\n              {previous && (\n                <Link\n                  to={`/blog${previous?.fields?.slug}`}\n                  rel=\"prev\"\n                  className=\"pagination__link prev\"\n                >\n                  <FontAwesomeIcon\n                    icon={faChevronLeft}\n                    className=\"pagination__icon prev\"\n                  />\n                  <span style={{ marginLeft: '0.5em' }}>\n                    {previous?.frontmatter?.title}\n                  </span>\n                </Link>\n              )}\n            </li>\n            <li className=\"md:w-1/3\">\n              {next && (\n                <Link\n                  to={`/blog${next?.fields?.slug}`}\n                  rel=\"next\"\n                  className=\"pagination__link next\"\n                >\n                  <span style={{ marginRight: '0.5em' }}>\n                    {next?.frontmatter?.title}\n                  </span>\n                  <FontAwesomeIcon\n                    icon={faChevronRight}\n                    className=\"pagination__icon next\"\n                  />\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </article>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        description\n        hero {\n          childImageSharp {\n            fluid(maxWidth: 900) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n      tableOfContents(\n        absolute: false\n        pathToSlugField: \"frontmatter.path\"\n        maxDepth: 3\n      )\n    }\n  }\n`\n"],"sourceRoot":""}