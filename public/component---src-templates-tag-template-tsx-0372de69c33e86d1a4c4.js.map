{"version":3,"sources":["webpack:///./src/components/organisms/pagination.tsx","webpack:///./node_modules/clsx/dist/clsx.m.js","webpack:///./src/components/atoms/tag-label.tsx","webpack:///./src/components/pages/Tag/Main.tsx","webpack:///./src/templates/tag-template.tsx","webpack:///./src/components/molecules/bio.tsx","webpack:///./src/components/organisms/footer.tsx","webpack:///./src/components/molecules/item.tsx"],"names":["Pagination","isFirst","isLast","currentPage","type","pages","className","to","rel","icon","faChevronLeft","style","marginLeft","marginRight","faChevronRight","toVal","mix","k","y","str","Array","isArray","length","TagLabel","fieldValue","totalCount","variant","size","tmp","x","i","arguments","clsx","TagIndex","title","data","pageContext","tagPosts","allMarkdownRemark","edges","tagId","tagPages","isText","map","node","key","fields","slug","frontmatter","src","hero","childImageSharp","fluid","date","tags","Main","Bio","useStaticQuery","author","site","siteMetadata","social","avatar","fixed","alt","name","imgStyle","borderRadius","href","twitter","target","github","Footer","Date","getFullYear","Item","itemScope","itemType","itemProp","content","tag","index"],"mappings":"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","file":"component---src-templates-tag-template-tsx-0372de69c33e86d1a4c4.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { AppProps } from '@/types'\n\nconst Pagination: React.FC<AppProps['pagination']> = ({\n  isFirst,\n  isLast,\n  currentPage,\n  type,\n  pages,\n}) => {\n  return (\n    <nav className=\"pagination\">\n      <ul className=\"pagination-list\">\n        {!isFirst && (\n          <li className=\"pagination-list__item prev\">\n            <Link\n              className=\"pagination__link\"\n              to={\n                currentPage === 2 ? `/${type}/` : `/${type}/${currentPage! - 1}`\n              }\n              rel=\"prev\"\n            >\n              <FontAwesomeIcon\n                icon={faChevronLeft}\n                className=\"pagination__icon prev\"\n              />\n              <span style={{ marginLeft: '0.5em' }}>Prev</span>\n            </Link>\n          </li>\n        )}\n        <li className=\"page-txt\">\n          page {currentPage} / {pages}\n        </li>\n        {!isLast && (\n          <li className=\"pagination-list__item next\">\n            <Link\n              to={`/${type}/${currentPage! + 1}/`}\n              className=\"pagination__link\"\n              rel=\"next\"\n            >\n              <span style={{ marginRight: '0.5em' }}>Next</span>\n              <FontAwesomeIcon\n                icon={faChevronRight}\n                className=\"pagination__icon next\"\n              />\n            </Link>\n          </li>\n        )}\n      </ul>\n    </nav>\n  )\n}\n\nexport default Pagination\n","function toVal(mix) {\n  var k,\n      y,\n      str = '';\n\n  if (typeof mix === 'string' || typeof mix === 'number') {\n    str += mix;\n  } else if (typeof mix === 'object') {\n    if (Array.isArray(mix)) {\n      for (k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n          if (y = toVal(mix[k])) {\n            str && (str += ' ');\n            str += y;\n          }\n        }\n      }\n    } else {\n      for (k in mix) {\n        if (mix[k]) {\n          str && (str += ' ');\n          str += k;\n        }\n      }\n    }\n  }\n\n  return str;\n}\n\nexport default function () {\n  var i = 0,\n      tmp,\n      x,\n      str = '';\n\n  while (i < arguments.length) {\n    if (tmp = arguments[i++]) {\n      if (x = toVal(tmp)) {\n        str && (str += ' ');\n        str += x;\n      }\n    }\n  }\n\n  return str;\n}","import React from 'react'\nimport { Link } from 'gatsby'\nimport clsx from 'clsx'\n\nimport { AppProps } from '@/types'\n\nconst TagLabel: React.FC<AppProps['taglabel']> = ({\n  fieldValue,\n  totalCount,\n  variant,\n}) => {\n  const size = clsx(\n    'post-tag',\n    variant === 'sm' && 'post-tag--sm',\n    variant === 'lg' && 'post-tag--lg'\n  )\n\n  return (\n    <Link className={size} to={`/tag/${fieldValue}`}>\n      {fieldValue}\n      {totalCount && <span className=\"inline-block ml-2\">({totalCount})</span>}\n    </Link>\n  )\n}\n\nexport default TagLabel\n","import React from 'react'\n\nimport Seo from '@/components/shared/seo'\nimport Item from '@/components/molecules/item'\nimport Pagination from '@/components/organisms/pagination'\nimport Header from '@/components/organisms/header'\nimport Fv from '@/components/organisms/fv'\nimport Footer from '@/components/organisms/footer'\nimport { TagTemplateProps } from '@/types'\n\nconst TagIndex: React.FC<TagTemplateProps> = ({ title, data, pageContext }) => {\n  const tagPosts = data.allMarkdownRemark.edges\n  const { tagId, isFirst, isLast, currentPage, tagPages } = pageContext\n\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <Fv title={title} isText={true} />\n      <main className=\"py-8 md:py-12 px-4 mx-auto max-w-screen-lg\">\n        <Seo title={title} />\n        <section className=\"section blog\">\n          <div className=\"text-center\">\n            <h1 className=\"pb-4 mb-10 section__ttl\">{`${tagId}`}</h1>\n          </div>\n          <ul className=\"blog-list\">\n            {tagPosts.map(({ node }) => (\n              <Item\n                key={node.fields?.slug}\n                title={node.frontmatter?.title}\n                src={node.frontmatter?.hero?.childImageSharp?.fluid}\n                slug={node.fields?.slug}\n                date={node.frontmatter?.date}\n                tags={node.frontmatter?.tags}\n                variant={'sm'}\n              />\n            ))}\n          </ul>\n          <div className=\"max-w-screen-sm mx-auto py-12\">\n            <Pagination\n              isFirst={isFirst!}\n              isLast={isLast!}\n              currentPage={currentPage!}\n              type={`tag/${tagId}`}\n              pages={tagPages!}\n            />\n          </div>\n        </section>\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default TagIndex\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Main from '@/components/pages/Tag/Main'\nimport { TagTemplateProps } from '@/types'\n\nconst TagIndex: React.FC<TagTemplateProps> = ({ data, pageContext }) => {\n  const { tagId } = pageContext\n\n  return <Main title={`Tag: ${tagId}`} data={data} pageContext={pageContext} />\n}\n\nexport default TagIndex\n\nexport const pageQuery = graphql`\n  query TagPage($limit: Int!, $skip: Int!, $tagId: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: { tags: { in: [$tagId] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            description\n            hero {\n              childImageSharp {\n                fluid(maxWidth: 900) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nconst Bio: React.FC = () => {\n  const data = useStaticQuery<GatsbyTypes.BioQuery>(graphql`\n    query Bio {\n      avatar: file(absolutePath: { regex: \"/avatar.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50, quality: 95) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n          social {\n            twitter\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  const author = data.site?.siteMetadata?.author\n  const social = data.site?.siteMetadata?.social\n  const avatar = data?.avatar?.childImageSharp?.fixed\n\n  return (\n    <div className=\"flex\">\n      {avatar && (\n        <Image\n          fixed={avatar}\n          alt={author?.name || ``}\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n        />\n      )}\n      {author?.name && (\n        <ul className=\"bio-list\">\n          <li>\n            <a\n              className=\"bio-list__link anim-link\"\n              href={`https://twitter.com/${social?.twitter || ``}`}\n              target=\"_blank\"\n              rel=\"noopenner noreferrer\"\n            >\n              Twitter\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"bio-list__link anim-link\"\n              href={`https://github.com/${social?.github || ``}`}\n              target=\"_blank\"\n              rel=\"noopenner noreferrer\"\n            >\n              GitHub\n            </a>\n          </li>\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react'\n\nimport Bio from '@/components/molecules/bio'\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"bg-gray-light\">\n      <div className=\"py-4 flex justify-between container\">\n        <Bio />\n        <small className=\"self-end text-white\">\n          &copy; {new Date().getFullYear()} K.Iwata\n        </small>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport TagLabel from '@/components/atoms/tag-label'\nimport { AppProps } from '@/types'\n\nconst Item: React.FC<AppProps['item']> = ({\n  title,\n  date,\n  slug,\n  src,\n  tags,\n  variant,\n}) => {\n  return (\n    <li key={slug}>\n      <article itemScope itemType=\"http://schema.org/Article\">\n        <figure className=\"overflow-hidden rounded relative blog-list__imgwrap\">\n          <Link\n            to={`/blog${slug!}`}\n            className=\"block transition-transform duration-700 ease-out\"\n            itemProp=\"url\"\n          >\n            <Image fluid={src!} alt=\"\" />\n          </Link>\n          <p className=\"blog-list__date\">\n            <span itemProp=\"datePublished\" content={date}>\n              {date}\n            </span>\n          </p>\n        </figure>\n        <h2 className=\"blog-list__ttl\">\n          <Link\n            to={`/blog${slug!}`}\n            itemProp=\"url\"\n            className=\"block hover:opacity-60 transition-opacity\"\n          >\n            <span itemProp=\"headline\">{title}</span>\n          </Link>\n        </h2>\n        <div className=\"mt-1\">\n          <ul className=\"blog-list-taglist\">\n            {tags &&\n              tags.map((tag, index) => (\n                <li key={index}>\n                  <TagLabel fieldValue={tag} variant={variant} />\n                </li>\n              ))}\n          </ul>\n        </div>\n      </article>\n    </li>\n  )\n}\n\nexport default Item\n"],"sourceRoot":""}