{"version":3,"sources":["webpack:///./src/components/item.tsx","webpack:///./src/pages/index.tsx"],"names":["Item","title","date","slug","src","itemScope","itemType","className","to","itemProp","fluid","alt","pageQuery","BlogIndex","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","map","post","key","fields","frontmatter","hero","childImageSharp"],"mappings":"kNA0BeA,EApB0B,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IAC7D,OACE,4BACE,6BAASC,WAAS,EAACC,SAAS,6BAC1B,4BAAQC,UAAU,uBAChB,kBAAC,OAAD,CAAMC,GAAIL,EAAOI,UAAU,mBAAmBE,SAAS,OACrD,kBAAC,IAAD,CAAOC,MAAON,EAAMO,IAAI,OAG5B,wBAAIJ,UAAU,mBACZ,kBAAC,OAAD,CAAMC,GAAIL,EAAOM,SAAS,MAAMF,UAAU,oBACxC,0BAAME,SAAS,YAAYR,KAG/B,0BAAMM,UAAU,yBAAyBL,M,YCkBpCU,GAFEC,UA5BoD,SAAC,GAE9D,QADJC,EACI,EADJA,KAEMC,GAAY,UAAAD,EAAKE,YAAL,mBAAWC,oBAAX,eAAyBhB,QAAzB,QACZiB,EAAQJ,EAAKK,kBAAkBC,MACrC,OACE,kBAAC,IAAD,CAAQnB,MAAOc,GACb,kBAAC,IAAD,CAAKd,MAAM,SACX,6BAASM,UAAU,gBACjB,yBAAKA,UAAU,eACb,wBAAIA,UAAU,2CAAd,aAEF,wBAAIA,UAAU,cACXW,EAAMG,KAAI,SAAAC,GAAI,uBACb,kBAAC,EAAD,CACEC,IAAKD,EAAKE,OAAQrB,KAClBF,OAAO,UAAAqB,EAAKG,mBAAL,eAAkBxB,SAAlB,UAA2BqB,EAAKE,cAAhC,aAA2B,EAAarB,MAC/CC,IAAKkB,SAAF,UAAEA,EAAMG,mBAAR,iBAAE,EAAmBC,YAArB,iBAAE,EAAyBC,uBAA3B,aAAE,EAA0CjB,MAC/CP,KAAI,UAAEmB,EAAKE,cAAP,aAAE,EAAarB,KACnBD,KAAMoB,EAAKG,YAAavB,cAWb","file":"component---src-pages-index-tsx-e0051b0500f776c30706.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { AppProps } from '@/types'\n\nconst Item: React.FC<AppProps['item']> = ({ title, date, slug, src }) => {\n  return (\n    <li>\n      <article itemScope itemType=\"http://schema.org/Article\">\n        <figure className=\"daily-list__imgwrap\">\n          <Link to={slug!} className=\"daily-list__link\" itemProp=\"url\">\n            <Image fluid={src!} alt=\"\" />\n          </Link>\n        </figure>\n        <h2 className=\"daily-list__ttl\">\n          <Link to={slug!} itemProp=\"url\" className=\"daily-list__link\">\n            <span itemProp=\"headline\">{title}</span>\n          </Link>\n        </h2>\n        <span className=\"text-xs text-gray-400\">{date}</span>\n      </article>\n    </li>\n  )\n}\n\nexport default Item\n","import React from 'react'\nimport { Link, graphql, PageProps } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport Layout from '@/layouts/default'\nimport Item from '@/components/item'\nimport Seo from '@/components/seo'\n\nconst BlogIndex: React.FC<PageProps<GatsbyTypes.BlogIndexQuery>> = ({\n  data,\n}) => {\n  const siteTitle = data.site?.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  return (\n    <Layout title={siteTitle}>\n      <Seo title=\"Home\" />\n      <section className=\"section home\">\n        <div className=\"text-center\">\n          <h1 className=\"pb-6 md:pb-12 mb-6 md:mb-8 section__ttl\">Recently</h1>\n        </div>\n        <ul className=\"daily-list\">\n          {posts.map(post => (\n            <Item\n              key={post.fields!.slug!}\n              title={post.frontmatter?.title || post.fields?.slug}\n              src={post?.frontmatter?.hero?.childImageSharp?.fluid}\n              slug={post.fields?.slug}\n              date={post.frontmatter!.date}\n            />\n          ))}\n        </ul>\n      </section>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          hero {\n            childImageSharp {\n              fluid(maxWidth: 900) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}