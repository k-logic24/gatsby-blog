{"version":3,"sources":["webpack:///./src/templates/blog-post.tsx"],"names":["BlogPostTemplate","data","pageContext","post","markdownRemark","postTitle","frontmatter","title","postDate","date","tableOfContents","previous","site","siteMetadata","next","description","excerpt","className","itemScope","itemType","dangerouslySetInnerHTML","__html","html","itemProp","to","fields","slug","rel","icon","faChevronLeft","style","marginLeft","marginRight","faChevronRight","pageQuery"],"mappings":"2FAAA,sIA+EeA,UA3DmC,SAAC,GAA0B,wBAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACnDC,EAAOF,EAAKG,eACZC,EAAYF,SAAH,UAAGA,EAAMG,mBAAT,aAAG,EAAmBC,MAC/BC,EAAWL,SAAH,UAAGA,EAAMG,mBAAT,aAAG,EAAmBG,KAC9BC,GAAkBP,aAAA,EAAAA,EAAMO,kBAAmB,GAEzCC,GADU,UAAAV,EAAKW,YAAL,mBAAWC,oBAAX,SAAyBN,MAChBL,EAAnBS,UAAUG,EAASZ,EAATY,KAElB,OACE,kBAAC,IAAD,CAAQP,MAAOF,EAAWI,KAAMD,GAC9B,kBAAC,IAAD,CACED,MAAOJ,SAAF,UAAEA,EAAMG,mBAAR,aAAE,EAAmBC,MAC1BQ,aAAaZ,SAAA,UAAAA,EAAMG,mBAAN,eAAmBS,eAAeZ,aAAlC,EAAkCA,EAAMa,WAEvD,6BACEC,UAAU,oCACVC,WAAS,EACTC,SAAS,6BAET,yBAAKF,UAAU,QACb,wBAAIA,UAAU,gDACXZ,GAEH,0BAAMY,UAAU,0BAA0BT,IAE5C,yBAAKY,wBAAyB,CAACC,OAAQX,KACvC,6BACEU,wBAAyB,CAAEC,OAAQlB,aAAF,EAAEA,EAAMmB,MACzCC,SAAS,gBAEX,yBAAKN,UAAU,kCACb,wBAAIA,UAAU,wBACZ,4BACGN,GACC,kBAAC,OAAD,CAAMa,GAAIb,SAAF,UAAEA,EAAUc,cAAZ,aAAE,EAAkBC,KAAOC,IAAI,QACrC,kBAAC,IAAD,CAAiBC,KAAMC,MACvB,0BAAMC,MAAO,CAAEC,WAAY,UACxBpB,SADH,UACGA,EAAUL,mBADb,aACG,EAAuBC,SAKhC,4BACGO,GACC,kBAAC,OAAD,CAAMU,GAAIV,SAAF,UAAEA,EAAMW,cAAR,aAAE,EAAcC,KAAOC,IAAI,QACjC,0BAAMG,MAAO,CAAEE,YAAa,UACzBlB,SADH,UACGA,EAAMR,mBADT,aACG,EAAmBC,OAEtB,kBAAC,IAAD,CAAiBqB,KAAMK,aAalC,IAAMC,EAAY","file":"component---src-templates-blog-post-tsx-2b41c25d1171542e6960.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport Bio from '@/components/bio'\nimport Layout from '@/layouts/default'\nimport Seo from '@/components/seo'\n\ninterface BlogPostProps {\n  data: GatsbyTypes.BlogPostBySlugQuery\n  pageContext: {\n    previous: GatsbyTypes.MarkdownRemarkEdge['previous']\n    next: GatsbyTypes.MarkdownRemarkEdge['next']\n  }\n}\n\nconst BlogPostTemplate: React.FC<BlogPostProps> = ({ data, pageContext }) => {\n  const post = data.markdownRemark\n  const postTitle = post?.frontmatter?.title\n  const postDate = post?.frontmatter?.date\n  const tableOfContents = post?.tableOfContents || ''\n  const siteTitle = data.site?.siteMetadata?.title || `Title`\n  const { previous, next } = pageContext\n\n  return (\n    <Layout title={postTitle} date={postDate}>\n      <Seo\n        title={post?.frontmatter?.title}\n        description={post?.frontmatter?.description || post?.excerpt}\n      />\n      <article\n        className=\"max-w-screen-md mx-auto blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <div className=\"mb-8\">\n          <h1 className=\"font-bold text-xl md:text-2xl blog-post__ttl\">\n            {postTitle}\n          </h1>\n          <span className=\"text-xs text-secondary\">{postDate}</span>\n        </div>\n        <div dangerouslySetInnerHTML={{__html: tableOfContents}}></div>\n        <section\n          dangerouslySetInnerHTML={{ __html: post?.html as string }}\n          itemProp=\"articleBody\"\n        />\n        <nav className=\"hidden md:block pt-12 paginate\">\n          <ul className=\"flex justify-between\">\n            <li>\n              {previous && (\n                <Link to={previous?.fields?.slug!} rel=\"prev\">\n                  <FontAwesomeIcon icon={faChevronLeft} />\n                  <span style={{ marginLeft: '0.5em' }}>\n                    {previous?.frontmatter?.title}\n                  </span>\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next?.fields?.slug!} rel=\"next\">\n                  <span style={{ marginRight: '0.5em' }}>\n                    {next?.frontmatter?.title}\n                  </span>\n                  <FontAwesomeIcon icon={faChevronRight} />\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </article>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n      tableOfContents\n    }\n  }\n`\n"],"sourceRoot":""}