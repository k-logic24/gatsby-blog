{"version":3,"sources":["webpack:///./src/templates/tag-template.tsx","webpack:///./src/components/pagination.tsx"],"names":["TagIndex","data","pageContext","tagPosts","allMarkdownRemark","edges","tagId","isFirst","isLast","currentPage","tagPages","length","title","className","map","node","key","fields","slug","itemScope","itemType","to","itemProp","fluid","frontmatter","hero","childImageSharp","alt","date","tags","tag","index","type","pages","Pagination","rel","icon","faChevronLeft","style","marginLeft","marginRight","faChevronRight"],"mappings":"4FAAA,qGA8FeA,UA5EX,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACLC,EAAWF,EAAKG,kBAAkBC,MAChCC,EAAkDJ,EAAlDI,MAAOC,EAA2CL,EAA3CK,QAASC,EAAkCN,EAAlCM,OAAQC,EAA0BP,EAA1BO,YAAaC,EAAaR,EAAbQ,SAE7C,OAAwB,IAApBP,EAASQ,OAET,kBAAC,IAAD,CAAQC,MAAK,OAASN,GACpB,kBAAC,IAAD,CAAKM,MAAK,OAASN,IACnB,2CAMJ,kBAAC,IAAD,CAAQM,MAAK,OAASN,GACpB,kBAAC,IAAD,CAAKM,MAAK,OAASN,IACnB,6BAASO,UAAU,gBACjB,yBAAKA,UAAU,eACb,wBAAIA,UAAU,2BAAd,OAAgDP,IAElD,wBAAIO,UAAU,aACXV,EAASW,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACZ,wBAAIC,IAAKD,EAAKE,OAAOC,MACnB,6BAASC,WAAS,EAACC,SAAS,6BAC1B,4BAAQP,UAAU,uDAChB,kBAAC,OAAD,CACEQ,GAAE,QAAUN,EAAKE,OAAOC,KACxBL,UAAU,mDACVS,SAAS,OAET,kBAAC,IAAD,CACEC,MAAOR,EAAKS,YAAYC,KAAKC,gBAAgBH,MAC7CI,IAAI,MAGR,uBAAGd,UAAU,mBAAmBE,EAAKS,YAAYI,OAEnD,wBAAIf,UAAU,kBACZ,kBAAC,OAAD,CACEQ,GAAE,QAAUN,EAAKE,OAAOC,KACxBI,SAAS,MACTT,UAAU,6CAEV,0BAAMS,SAAS,YAAYP,EAAKS,YAAYZ,SAGhD,yBAAKC,UAAU,6BACZE,EAAKS,YAAYK,MAChBd,EAAKS,YAAYK,KAAKf,KAAI,SAACgB,EAAKC,GAAN,OACxB,kBAAC,OAAD,CACElB,UAAU,8BACVQ,GAAE,QAAUS,EACZd,IAAKe,GAEJD,aAQjB,yBAAKjB,UAAU,iCACb,kBAAC,IAAD,CACEN,QAASA,EACTC,OAAQA,EACRC,YAAaA,EACbuB,KAAI,OAAS1B,EACb2B,MAAOvB,S,kCCtFnB,6DA4DewB,IAlDsC,SAAC,GAMhD,IALJ3B,EAKI,EALJA,QACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,YACAuB,EAEI,EAFJA,KACAC,EACI,EADJA,MAEA,OACE,yBAAKpB,UAAU,cACb,wBAAIA,UAAU,oBACVN,GACA,wBAAIM,UAAU,8BACZ,kBAAC,OAAD,CACEA,UAAU,mBACVQ,GACkB,IAAhBZ,EAAA,IAAwBuB,EAAxB,QAAsCA,EAAtC,KAA8CvB,EAAe,GAE/D0B,IAAI,QAEJ,kBAAC,IAAD,CACEC,KAAMC,IACNxB,UAAU,0BAEZ,0BAAMyB,MAAO,CAAEC,WAAY,UAA3B,UAIN,wBAAI1B,UAAU,YAAd,QACQJ,EADR,MACwBwB,IAEtBzB,GACA,wBAAIK,UAAU,8BACZ,kBAAC,OAAD,CACEQ,GAAE,IAAMW,EAAN,KAAcvB,EAAe,GAA7B,IACFI,UAAU,mBACVsB,IAAI,QAEJ,0BAAMG,MAAO,CAAEE,YAAa,UAA5B,QACA,kBAAC,IAAD,CACEJ,KAAMK,IACN5B,UAAU","file":"component---src-templates-tag-template-tsx-a4a7afca8534c239989c.js","sourcesContent":["import React from 'react'\nimport { Link, graphql, PageProps } from 'gatsby'\nimport Image from 'gatsby-image'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport Bio from '@/components/bio'\nimport Layout from '@/layouts/default'\nimport Seo from '@/components/seo'\nimport Item from '@/components/blog/item'\nimport Pagination from '@/components/pagination'\nimport { AppProps } from '@/types'\n\nconst TagIndex: React.FC<\n  PageProps<GatsbyTypes.TagPage> & AppProps['template']\n> = ({ data, pageContext }) => {\n  const tagPosts = data.allMarkdownRemark.edges\n  const { tagId, isFirst, isLast, currentPage, tagPages } = pageContext\n\n  if (tagPosts.length === 0) {\n    return (\n      <Layout title={`TAG：${tagId}`}>\n        <Seo title={`TAG：${tagId}`} />\n        <p>No posts...</p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout title={`タグ: ${tagId}`}>\n      <Seo title={`タグ: ${tagId}`} />\n      <section className=\"section blog\">\n        <div className=\"text-center\">\n          <h1 className=\"pb-4 mb-10 section__ttl\">{`タグ: ${tagId}`}</h1>\n        </div>\n        <ul className=\"blog-list\">\n          {tagPosts.map(({ node }) => (\n            <li key={node.fields.slug}>\n              <article itemScope itemType=\"http://schema.org/Article\">\n                <figure className=\"overflow-hidden rounded relative blog-list__imgwrap\">\n                  <Link\n                    to={`/blog${node.fields.slug!}`}\n                    className=\"block transition-transform duration-700 ease-out\"\n                    itemProp=\"url\"\n                  >\n                    <Image\n                      fluid={node.frontmatter.hero.childImageSharp.fluid!}\n                      alt=\"\"\n                    />\n                  </Link>\n                  <p className=\"blog-list__date\">{node.frontmatter.date}</p>\n                </figure>\n                <h2 className=\"blog-list__ttl\">\n                  <Link\n                    to={`/blog${node.fields.slug!}`}\n                    itemProp=\"url\"\n                    className=\"block hover:opacity-60 transition-opacity\"\n                  >\n                    <span itemProp=\"headline\">{node.frontmatter.title}</span>\n                  </Link>\n                </h2>\n                <div className=\"mt-2 flex flex-wrap gap-1\">\n                  {node.frontmatter.tags &&\n                    node.frontmatter.tags.map((tag, index) => (\n                      <Link\n                        className=\"text-xs md:text-sm post-tag\"\n                        to={`/tag/${tag}`}\n                        key={index}\n                      >\n                        {tag}\n                      </Link>\n                    ))}\n                </div>\n              </article>\n            </li>\n          ))}\n        </ul>\n        <div className=\"max-w-screen-sm mx-auto py-12\">\n          <Pagination\n            isFirst={isFirst!}\n            isLast={isLast!}\n            currentPage={currentPage!}\n            type={`tag/${tagId}`}\n            pages={tagPages!}\n          />\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default TagIndex\n\nexport const pageQuery = graphql`\n  query TagPage($limit: Int!, $skip: Int!, $tagId: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: { tags: { in: [$tagId] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY.MM.DD\")\n            title\n            description\n            hero {\n              childImageSharp {\n                fluid(maxWidth: 900) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { AppProps } from '@/types'\n\nconst Pagination: React.FC<AppProps['pagination']> = ({\n  isFirst,\n  isLast,\n  currentPage,\n  type,\n  pages,\n}) => {\n  return (\n    <nav className=\"pagination\">\n      <ul className=\"pagination-list\">\n        {!isFirst && (\n          <li className=\"pagination-list__item prev\">\n            <Link\n              className=\"pagination__link\"\n              to={\n                currentPage === 2 ? `/${type}/` : `/${type}/${currentPage! - 1}`\n              }\n              rel=\"prev\"\n            >\n              <FontAwesomeIcon\n                icon={faChevronLeft}\n                className=\"pagination__icon prev\"\n              />\n              <span style={{ marginLeft: '0.5em' }}>Prev</span>\n            </Link>\n          </li>\n        )}\n        <li className=\"page-txt\">\n          page {currentPage} / {pages}\n        </li>\n        {!isLast && (\n          <li className=\"pagination-list__item next\">\n            <Link\n              to={`/${type}/${currentPage! + 1}/`}\n              className=\"pagination__link\"\n              rel=\"next\"\n            >\n              <span style={{ marginRight: '0.5em' }}>Next</span>\n              <FontAwesomeIcon\n                icon={faChevronRight}\n                className=\"pagination__icon next\"\n              />\n            </Link>\n          </li>\n        )}\n      </ul>\n    </nav>\n  )\n}\n\nexport default Pagination\n"],"sourceRoot":""}