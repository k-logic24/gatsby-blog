{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/put-the-content/","result":{"data":{"site":{"siteMetadata":{"title":"K.Iwata's BLOG"}},"markdownRemark":{"id":"be780f79-f1ad-5eb3-96a6-50feea991f42","excerpt":"某日、WordPress サイト SEO 対策にて、「サイトマップとは別に読み込ませたいテキストファイルがある。」と依頼がきました。 なんでも、記事が数百あり、それをクロールさせたい。 でも sitemap.xml に出せないから、動的に url…","html":"<p>某日、WordPress サイト SEO 対策にて、「サイトマップとは別に読み込ませたいテキストファイルがある。」と依頼がきました。</p>\n<p>なんでも、記事が数百あり、それをクロールさせたい。<br>\nでも sitemap.xml に出せないから、動的に url 生成しテキストファイルを生成して、それを読み込ませていきたい、とのこと。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 以下の様なurlが数百とあった\nhttps://example.com/manual/post?id=....</code></pre></div>\n<h2>フックさせたのはいいものの。。</h2>\n<p>さて、どうしようか、と一呼吸おき、考えたのはフックの利用です。</p>\n<p>WordPress にはフック機能があり、例えば記事をアップした時、更新した時、といったタイミングで任意の関数を実行できる便利な機能です。</p>\n<p>こんな感じで実装してみました。</p>\n\n        <div class=\"gatsby-code-title md-label\">\n          <span>functions.php</span>\n        </div>\n       \n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">add_action</span><span class=\"token punctuation\">(</span> <span class=\"token single-quoted-string string\">'save_post'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'save_post_urls'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">save_post_urls</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$post_ID</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$post_type</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_post_type</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$post_ID</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$post_type</span> <span class=\"token operator\">===</span> <span class=\"token double-quoted-string string\">\"manual_page\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// foreachやらなんやらしてpost記事を取得</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token comment\">// ここに整ったurlたちの文字列が入っている</span>\n        <span class=\"token variable\">$post_urls</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$file_path</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_path</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$post_urls</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">LOCK_EX</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>よし、できた！も束の間、見事にできていませんでした。</p>\n<h2>何がまちがっていたのか？</h2>\n<h3>そもそもパス、合っているか？</h3>\n<p><code class=\"language-text\">$file_path</code>はサーバールートからのフルパスになります。<br>\nサイトのドメインからみていませんか？</p>\n<p>サーバーパスが不明な場合は以下の構文を試したいファイルに記述してみるといいです。</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">echo</span> <span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span></code></pre></div>\n<p>そうしたら、画面にパス情報が出力されます。</p>\n<h3>許可、されてる？</h3>\n<p>これは結構盲点ではないでしょうか。いわゆるパーミッションっていうやつです。<br>\n「ファイル書き込み、読み込み、実行をしていーよー」っていう許可です。</p>\n<p><code class=\"language-text\">file_put_contents</code>関数が file があったら上書きしたり、なかったら新しく生成するような関数なんですが、それにもサーバー側の許可が必要です。</p>\n<p>この許可がないと、見事に反映されないので要注意です。</p>\n<h2>結果</h2>\n<p>しっかり生成、書き足し等できる状態に出来上がりました。</p>\n<p>関数は便利ですが、そうしたセキュリティー面であったりも気を配らなければ、とより一層気を引き締める１日でした。</p>","frontmatter":{"title":"put_the_contentsでハマった話","date":"December 01, 2020","description":"put_the_contentsでハマった話の共有です。"}}},"pageContext":{"slug":"/put-the-content/","previous":null,"next":{"fields":{"slug":"/daily-policy/"},"frontmatter":{"title":"日記みたいなもの"}}}},"staticQueryHashes":["3534452819","984448874"]}