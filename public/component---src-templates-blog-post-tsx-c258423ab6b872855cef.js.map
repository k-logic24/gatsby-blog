{"version":3,"sources":["webpack:///./src/components/molecules/bio.tsx","webpack:///./src/components/organisms/footer.tsx","webpack:///./src/components/pages/Post/Main.tsx","webpack:///./src/templates/blog-post.tsx"],"names":["Bio","data","useStaticQuery","author","site","siteMetadata","social","avatar","childImageSharp","fixed","className","alt","name","imgStyle","borderRadius","href","twitter","target","rel","github","Footer","Date","getFullYear","Main","pageContext","post","markdownRemark","html","title","frontmatter","date","src","hero","fluid","tableOfContents","previous","next","description","excerpt","image","sizes","isText","itemScope","itemType","dangerouslySetInnerHTML","__html","itemProp","to","fields","slug","icon","faChevronLeft","style","marginLeft","marginRight","faChevronRight","BlogPostTemplate"],"mappings":"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","file":"component---src-templates-blog-post-tsx-c258423ab6b872855cef.js","sourcesContent":["import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nconst Bio: React.FC = () => {\n  const data = useStaticQuery<GatsbyTypes.BioQuery>(graphql`\n    query Bio {\n      avatar: file(absolutePath: { regex: \"/avatar.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50, quality: 95) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n          }\n          social {\n            twitter\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  const author = data.site?.siteMetadata?.author\n  const social = data.site?.siteMetadata?.social\n  const avatar = data?.avatar?.childImageSharp?.fixed\n\n  return (\n    <div className=\"flex\">\n      {avatar && (\n        <Image\n          fixed={avatar}\n          alt={author?.name || ``}\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n        />\n      )}\n      {author?.name && (\n        <ul className=\"bio-list\">\n          <li>\n            <a\n              className=\"bio-list__link anim-link\"\n              href={`https://twitter.com/${social?.twitter || ``}`}\n              target=\"_blank\"\n              rel=\"noopenner noreferrer\"\n            >\n              Twitter\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"bio-list__link anim-link\"\n              href={`https://github.com/${social?.github || ``}`}\n              target=\"_blank\"\n              rel=\"noopenner noreferrer\"\n            >\n              GitHub\n            </a>\n          </li>\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react'\n\nimport Bio from '@/components/molecules/bio'\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"bg-gray-light\">\n      <div className=\"py-4 flex justify-between container\">\n        <Bio />\n        <small className=\"self-end text-white\">\n          &copy; {new Date().getFullYear()} K.Iwata\n        </small>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport Header from '@/components/organisms/header'\nimport Footer from '@/components/organisms/footer'\nimport Fv from '@/components/organisms/fv'\nimport Seo from '@/components/shared/seo'\nimport Image from 'gatsby-image'\n\nimport { BlogPostProps } from '@/types'\n\nconst Main: React.FC<BlogPostProps> = ({ data, pageContext }) => {\n  const post = data.markdownRemark\n  const html = post?.html\n  const title = post?.frontmatter?.title\n  const date = post?.frontmatter?.date\n  const src = post?.frontmatter?.hero?.childImageSharp?.fluid\n  const tableOfContents = post?.tableOfContents || ''\n  const { previous, next } = pageContext\n\n  return (\n    <div className=\"wrapper\">\n      <Seo\n        title={post?.frontmatter?.title}\n        description={post?.frontmatter?.description || post?.excerpt}\n        image={post?.frontmatter?.hero?.childImageSharp?.sizes?.src}\n      />\n      <Header />\n      <Fv isText={false} />\n      <main className=\"py-8 md:py-12 px-4 mx-auto max-w-screen-lg\">\n        <article\n          className=\"max-w-screen-md mx-auto blog-post\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <div className=\"mb-6\">\n            <h1 className=\"font-bold text-xl md:text-2xl blog-post__ttl\">\n              {title}\n            </h1>\n            <span className=\"text-xs text-secondary\">{date}</span>\n          </div>\n          <div className=\"mb-8\">\n            <Image fluid={src!} alt=\"\" />\n          </div>\n          {tableOfContents && (\n            <div\n              className=\"toc\"\n              dangerouslySetInnerHTML={{ __html: tableOfContents }}\n            ></div>\n          )}\n          <section\n            className=\"blog-post-contents\"\n            dangerouslySetInnerHTML={{ __html: html as string }}\n            itemProp=\"articleBody\"\n          />\n          <nav className=\"hidden md:block pt-12 paginate\">\n            <ul className=\"flex justify-between\">\n              <li className=\"md:w-1/3\">\n                {previous && (\n                  <Link\n                    to={`/blog${previous?.fields?.slug}`}\n                    rel=\"prev\"\n                    className=\"pagination__link prev\"\n                  >\n                    <FontAwesomeIcon\n                      icon={faChevronLeft}\n                      className=\"pagination__icon prev\"\n                    />\n                    <span style={{ marginLeft: '0.5em' }}>\n                      {previous?.frontmatter?.title}\n                    </span>\n                  </Link>\n                )}\n              </li>\n              <li className=\"md:w-1/3\">\n                {next && (\n                  <Link\n                    to={`/blog${next?.fields?.slug}`}\n                    rel=\"next\"\n                    className=\"pagination__link next\"\n                  >\n                    <span style={{ marginRight: '0.5em' }}>\n                      {next?.frontmatter?.title}\n                    </span>\n                    <FontAwesomeIcon\n                      icon={faChevronRight}\n                      className=\"pagination__icon next\"\n                    />\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </nav>\n        </article>\n      </main>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Main\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Main from '@/components/pages/Post/Main'\nimport { BlogPostProps } from '@/types'\n\nconst BlogPostTemplate: React.FC<BlogPostProps> = ({ data, pageContext }) => {\n  return <Main data={data} pageContext={pageContext} />\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        description\n        hero {\n          childImageSharp {\n            fluid(maxWidth: 900) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            sizes {\n              src\n            }\n          }\n        }\n      }\n      tableOfContents(\n        absolute: false\n        pathToSlugField: \"frontmatter.path\"\n        maxDepth: 3\n      )\n    }\n  }\n`\n"],"sourceRoot":""}