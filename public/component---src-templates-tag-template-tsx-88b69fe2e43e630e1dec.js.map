{"version":3,"sources":["webpack:///./src/templates/tag-template.tsx","webpack:///./src/components/pagination.tsx","webpack:///./src/components/item.tsx"],"names":["TagIndex","data","pageContext","tagPosts","allMarkdownRemark","edges","tagId","isFirst","isLast","currentPage","tagPages","length","title","description","className","map","node","key","fields","slug","frontmatter","src","hero","childImageSharp","fluid","date","tags","type","pages","Pagination","to","rel","icon","faChevronLeft","style","marginLeft","marginRight","faChevronRight","Item","itemScope","itemType","itemProp","alt","content","tag","index"],"mappings":"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","file":"component---src-templates-tag-template-tsx-88b69fe2e43e630e1dec.js","sourcesContent":["import React from 'react'\nimport { graphql, PageProps } from 'gatsby'\n\nimport Layout from '@/layouts/default'\nimport Seo from '@/components/seo'\nimport Item from '@/components/item'\nimport Pagination from '@/components/pagination'\nimport { AppProps } from '@/types'\n\nconst TagIndex: React.FC<\n  PageProps<GatsbyTypes.TagPage> & AppProps['template']\n> = ({ data, pageContext }) => {\n  const tagPosts = data.allMarkdownRemark.edges\n  const { tagId, isFirst, isLast, currentPage, tagPages } = pageContext\n\n  if (tagPosts.length === 0) {\n    return (\n      <Layout title={`TAG：${tagId}`}>\n        <Seo title={`TAG：${tagId}`} />\n        <p>No posts...</p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout title={`Tag: ${tagId}`}>\n      <Seo title={`${tagId}`} description={`タグ: ${tagId}の一覧です。`} />\n      <section className=\"section blog\">\n        <div className=\"text-center\">\n          <h1 className=\"pb-4 mb-10 section__ttl\">{`${tagId}`}</h1>\n        </div>\n        <ul className=\"blog-list\">\n          {tagPosts.map(({ node }) => (\n            <Item\n              key={node.fields.slug}\n              title={node.frontmatter.title}\n              src={node.frontmatter.hero.childImageSharp.fluid!}\n              slug={node.fields.slug}\n              date={node.frontmatter.date}\n              tags={node.frontmatter.tags}\n            />\n          ))}\n        </ul>\n        <div className=\"max-w-screen-sm mx-auto py-12\">\n          <Pagination\n            isFirst={isFirst!}\n            isLast={isLast!}\n            currentPage={currentPage!}\n            type={`tag/${tagId}`}\n            pages={tagPages!}\n          />\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default TagIndex\n\nexport const pageQuery = graphql`\n  query TagPage($limit: Int!, $skip: Int!, $tagId: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: { tags: { in: [$tagId] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            title\n            description\n            hero {\n              childImageSharp {\n                fluid(maxWidth: 900) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { AppProps } from '@/types'\n\nconst Pagination: React.FC<AppProps['pagination']> = ({\n  isFirst,\n  isLast,\n  currentPage,\n  type,\n  pages,\n}) => {\n  return (\n    <nav className=\"pagination\">\n      <ul className=\"pagination-list\">\n        {!isFirst && (\n          <li className=\"pagination-list__item prev\">\n            <Link\n              className=\"pagination__link\"\n              to={\n                currentPage === 2 ? `/${type}/` : `/${type}/${currentPage! - 1}`\n              }\n              rel=\"prev\"\n            >\n              <FontAwesomeIcon\n                icon={faChevronLeft}\n                className=\"pagination__icon prev\"\n              />\n              <span style={{ marginLeft: '0.5em' }}>Prev</span>\n            </Link>\n          </li>\n        )}\n        <li className=\"page-txt\">\n          page {currentPage} / {pages}\n        </li>\n        {!isLast && (\n          <li className=\"pagination-list__item next\">\n            <Link\n              to={`/${type}/${currentPage! + 1}/`}\n              className=\"pagination__link\"\n              rel=\"next\"\n            >\n              <span style={{ marginRight: '0.5em' }}>Next</span>\n              <FontAwesomeIcon\n                icon={faChevronRight}\n                className=\"pagination__icon next\"\n              />\n            </Link>\n          </li>\n        )}\n      </ul>\n    </nav>\n  )\n}\n\nexport default Pagination\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { AppProps } from '@/types'\n\nconst Item: React.FC<AppProps['item']> = ({ title, date, slug, src, tags }) => {\n  return (\n    <li key={slug}>\n      <article itemScope itemType=\"http://schema.org/Article\">\n        <figure className=\"overflow-hidden rounded relative blog-list__imgwrap\">\n          <Link\n            to={`/blog${slug!}`}\n            className=\"block transition-transform duration-700 ease-out\"\n            itemProp=\"url\"\n          >\n            <Image fluid={src!} alt=\"\" />\n          </Link>\n          <p className=\"blog-list__date\">\n            <span itemProp=\"datePublished\" content={date}>\n              {date}\n            </span>\n          </p>\n        </figure>\n        <h2 className=\"blog-list__ttl\">\n          <Link\n            to={`/blog${slug!}`}\n            itemProp=\"url\"\n            className=\"block hover:opacity-60 transition-opacity\"\n          >\n            <span itemProp=\"headline\">{title}</span>\n          </Link>\n        </h2>\n        <div className=\"mt-1\">\n          <ul className=\"blog-list-taglist\">\n            {tags &&\n              tags.map((tag, index) => (\n                <li key={index}>\n                  <Link\n                    className=\"text-xs md:text-sm post-tag\"\n                    to={`/tag/${tag}`}\n                  >\n                    {tag}\n                  </Link>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </article>\n    </li>\n  )\n}\n\nexport default Item\n"],"sourceRoot":""}