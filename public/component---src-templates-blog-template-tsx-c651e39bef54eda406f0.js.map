{"version":3,"sources":["webpack:///./src/components/organisms/pagination.tsx","webpack:///./node_modules/clsx/dist/clsx.m.js","webpack:///./src/components/atoms/tag-label.tsx","webpack:///./src/components/molecules/item.tsx","webpack:///./src/components/pages/Blog/Main.tsx","webpack:///./src/templates/blog-template.tsx"],"names":["Pagination","isFirst","isLast","currentPage","type","pages","className","to","rel","icon","faChevronLeft","style","marginLeft","marginRight","faChevronRight","toVal","mix","k","y","str","Array","isArray","length","TagLabel","fieldValue","totalCount","variant","size","tmp","x","i","arguments","clsx","Item","title","date","slug","src","tags","key","itemScope","itemType","itemProp","fluid","alt","content","map","tag","index","Main","data","pageContext","useState","posts","setPosts","blogPages","useEffect","allMarkdownRemark","nodes","isText","description","post","frontmatter","fields","hero","childImageSharp","BlogIndex"],"mappings":"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","file":"component---src-templates-blog-template-tsx-c651e39bef54eda406f0.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { AppProps } from '@/types'\n\nconst Pagination: React.FC<AppProps['pagination']> = ({\n  isFirst,\n  isLast,\n  currentPage,\n  type,\n  pages,\n}) => {\n  return (\n    <nav className=\"pagination\">\n      <ul className=\"pagination-list\">\n        {!isFirst && (\n          <li className=\"pagination-list__item prev\">\n            <Link\n              className=\"pagination__link\"\n              to={\n                currentPage === 2 ? `/${type}/` : `/${type}/${currentPage! - 1}`\n              }\n              rel=\"prev\"\n            >\n              <FontAwesomeIcon\n                icon={faChevronLeft}\n                className=\"pagination__icon prev\"\n              />\n              <span style={{ marginLeft: '0.5em' }}>Prev</span>\n            </Link>\n          </li>\n        )}\n        <li className=\"page-txt\">\n          page {currentPage} / {pages}\n        </li>\n        {!isLast && (\n          <li className=\"pagination-list__item next\">\n            <Link\n              to={`/${type}/${currentPage! + 1}/`}\n              className=\"pagination__link\"\n              rel=\"next\"\n            >\n              <span style={{ marginRight: '0.5em' }}>Next</span>\n              <FontAwesomeIcon\n                icon={faChevronRight}\n                className=\"pagination__icon next\"\n              />\n            </Link>\n          </li>\n        )}\n      </ul>\n    </nav>\n  )\n}\n\nexport default Pagination\n","function toVal(mix) {\n  var k,\n      y,\n      str = '';\n\n  if (typeof mix === 'string' || typeof mix === 'number') {\n    str += mix;\n  } else if (typeof mix === 'object') {\n    if (Array.isArray(mix)) {\n      for (k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n          if (y = toVal(mix[k])) {\n            str && (str += ' ');\n            str += y;\n          }\n        }\n      }\n    } else {\n      for (k in mix) {\n        if (mix[k]) {\n          str && (str += ' ');\n          str += k;\n        }\n      }\n    }\n  }\n\n  return str;\n}\n\nexport default function () {\n  var i = 0,\n      tmp,\n      x,\n      str = '';\n\n  while (i < arguments.length) {\n    if (tmp = arguments[i++]) {\n      if (x = toVal(tmp)) {\n        str && (str += ' ');\n        str += x;\n      }\n    }\n  }\n\n  return str;\n}","import React from 'react'\nimport { Link } from 'gatsby'\nimport clsx from 'clsx'\n\nimport { AppProps } from '@/types'\n\nconst TagLabel: React.FC<AppProps['taglabel']> = ({\n  fieldValue,\n  totalCount,\n  variant,\n}) => {\n  const size = clsx(\n    'post-tag',\n    variant === 'sm' && 'post-tag--sm',\n    variant === 'lg' && 'post-tag--lg'\n  )\n\n  return (\n    <Link className={size} to={`/tag/${fieldValue}`}>\n      {fieldValue}\n      {totalCount && <span className=\"inline-block ml-2\">({totalCount})</span>}\n    </Link>\n  )\n}\n\nexport default TagLabel\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport TagLabel from '@/components/atoms/tag-label'\nimport { AppProps } from '@/types'\n\nconst Item: React.FC<AppProps['item']> = ({\n  title,\n  date,\n  slug,\n  src,\n  tags,\n  variant,\n}) => {\n  return (\n    <li key={slug}>\n      <article itemScope itemType=\"http://schema.org/Article\">\n        <figure className=\"overflow-hidden rounded relative blog-list__imgwrap\">\n          <Link\n            to={`/blog${slug!}`}\n            className=\"block transition-transform duration-700 ease-out\"\n            itemProp=\"url\"\n          >\n            <Image fluid={src!} alt=\"\" />\n          </Link>\n          <p className=\"blog-list__date\">\n            <span itemProp=\"datePublished\" content={date}>\n              {date}\n            </span>\n          </p>\n        </figure>\n        <h2 className=\"blog-list__ttl\">\n          <Link\n            to={`/blog${slug!}`}\n            itemProp=\"url\"\n            className=\"block hover:opacity-60 transition-opacity\"\n          >\n            <span itemProp=\"headline\">{title}</span>\n          </Link>\n        </h2>\n        <div className=\"mt-1\">\n          <ul className=\"blog-list-taglist\">\n            {tags &&\n              tags.map((tag, index) => (\n                <li key={index}>\n                  <TagLabel fieldValue={tag} variant={variant} />\n                </li>\n              ))}\n          </ul>\n        </div>\n      </article>\n    </li>\n  )\n}\n\nexport default Item\n","import React, { useEffect, useState } from 'react'\nimport Seo from '@/components/shared/seo'\nimport Item from '@/components/molecules/item'\nimport Pagination from '@/components/organisms/pagination'\nimport Header from '@/components/organisms/header'\nimport Fv from '@/components/organisms/fv'\nimport { BlogPageProps } from '@/types'\n\ntype PostProps = BlogPageProps['data']['allMarkdownRemark']['nodes']\n\nconst Main: React.FC<BlogPageProps> = ({ data, pageContext }) => {\n  const [posts, setPosts] = useState<PostProps>([])\n  const { isFirst, isLast, currentPage, blogPages } = pageContext\n\n  useEffect(() => {\n    setPosts(data.allMarkdownRemark.nodes)\n  }, [])\n\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <Fv title=\"BLOG\" isText={true} />\n      <main className=\"py-8 md:py-12 px-4 mx-auto max-w-screen-lg\">\n        <Seo title=\"BLOG\" description={`ブログ一覧ページになります。`} />\n        <section className=\"section blog\">\n          <div className=\"text-center\">\n            <h1 className=\"pb-4 mb-10 section__ttl\">記事</h1>\n          </div>\n          <ul className=\"blog-list\">\n            {posts.map(post => {\n              const title = post.frontmatter?.title || post.fields?.slug\n\n              return (\n                <Item\n                  key={post.fields!.slug!}\n                  title={title}\n                  src={post?.frontmatter?.hero?.childImageSharp?.fluid}\n                  slug={post.fields?.slug}\n                  date={post.frontmatter?.date}\n                  tags={post.frontmatter?.tags}\n                  variant={'sm'}\n                />\n              )\n            })}\n          </ul>\n          <div className=\"max-w-screen-sm mx-auto py-12\">\n            <Pagination\n              isFirst={isFirst!}\n              isLast={isLast!}\n              currentPage={currentPage!}\n              type={`blog`}\n              pages={blogPages!}\n            />\n          </div>\n        </section>\n      </main>\n    </div>\n  )\n}\n\nexport default Main\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Main from '@/components/pages/Blog/Main'\nimport { BlogPageProps } from '@/types'\n\nconst BlogIndex: React.FC<BlogPageProps> = ({ data, pageContext }) => {\n  return <Main data={data} pageContext={pageContext} />\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogPage($limit: Int!, $skip: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          hero {\n            childImageSharp {\n              fluid(maxWidth: 900) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n          tags\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}