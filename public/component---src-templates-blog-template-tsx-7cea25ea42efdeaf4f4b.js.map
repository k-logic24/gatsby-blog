{"version":3,"sources":["webpack:///./src/components/pagination.tsx","webpack:///./src/components/blog/item.tsx","webpack:///./src/templates/blog-template.tsx"],"names":["Pagination","isFirst","isLast","currentPage","type","pages","className","to","rel","icon","faChevronLeft","style","marginLeft","marginRight","faChevronRight","Item","title","date","slug","src","tags","itemScope","itemType","itemProp","fluid","alt","map","tag","index","key","BlogIndex","data","pageContext","posts","allMarkdownRemark","nodes","blogPages","length","post","frontmatter","fields","hero","childImageSharp"],"mappings":"2FAAA,6DA4DeA,IAlDsC,SAAC,GAMhD,IALJC,EAKI,EALJA,QACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,KACAC,EACI,EADJA,MAEA,OACE,yBAAKC,UAAU,cACb,wBAAIA,UAAU,oBACVL,GACA,wBAAIK,UAAU,8BACZ,kBAAC,OAAD,CACEA,UAAU,mBACVC,GACkB,IAAhBJ,EAAA,IAAwBC,EAAxB,QAAsCA,EAAtC,KAA8CD,EAAe,GAE/DK,IAAI,QAEJ,kBAAC,IAAD,CACEC,KAAMC,IACNJ,UAAU,0BAEZ,0BAAMK,MAAO,CAAEC,WAAY,UAA3B,UAIN,wBAAIN,UAAU,YAAd,QACQH,EADR,MACwBE,IAEtBH,GACA,wBAAII,UAAU,8BACZ,kBAAC,OAAD,CACEC,GAAE,IAAMH,EAAN,KAAcD,EAAe,GAA7B,IACFG,UAAU,mBACVE,IAAI,QAEJ,0BAAMG,MAAO,CAAEE,YAAa,UAA5B,QACA,kBAAC,IAAD,CACEJ,KAAMK,IACNR,UAAU,gC,kCClD1B,0DA8CeS,IAxC0B,SAAC,GAAqC,IAAnCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KAClE,OACE,4BACE,6BAASC,WAAS,EAACC,SAAS,6BAC1B,4BAAQhB,UAAU,uDAChB,kBAAC,OAAD,CACEC,GAAE,QAAUW,EACZZ,UAAU,mDACViB,SAAS,OAET,kBAAC,IAAD,CAAOC,MAAOL,EAAMM,IAAI,MAE1B,uBAAGnB,UAAU,mBAAmBW,IAElC,wBAAIX,UAAU,kBACZ,kBAAC,OAAD,CACEC,GAAE,QAAUW,EACZK,SAAS,MACTjB,UAAU,6CAEV,0BAAMiB,SAAS,YAAYP,KAG/B,yBAAKV,UAAU,6BACZc,GACCA,EAAKM,KAAI,SAACC,EAAKC,GAAN,OACP,kBAAC,OAAD,CACEtB,UAAU,8BACVC,GAAE,QAAUoB,EACZE,IAAKD,GAEJD,W,kCCrCjB,gFAoEeG,UAlDX,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACLC,EAAQF,EAAKG,kBAAkBC,MAC7BlC,EAA4C+B,EAA5C/B,QAASC,EAAmC8B,EAAnC9B,OAAQC,EAA2B6B,EAA3B7B,YAAaiC,EAAcJ,EAAdI,UAEtC,OAAqB,IAAjBH,EAAMI,OAEN,kBAAC,IAAD,CAAQrB,MAAM,QACZ,kBAAC,IAAD,CAAKA,MAAM,SACX,2CAMJ,kBAAC,IAAD,CAAQA,MAAM,QACZ,kBAAC,IAAD,CAAKA,MAAM,SACX,6BAASV,UAAU,gBACjB,yBAAKA,UAAU,eACb,wBAAIA,UAAU,2BAAd,OAEF,wBAAIA,UAAU,aACX2B,EAAMP,KAAI,SAAAY,GAAQ,oBACXtB,GAAQ,UAAAsB,EAAKC,mBAAL,eAAkBvB,SAAlB,UAA2BsB,EAAKE,cAAhC,aAA2B,EAAatB,MAEtD,OACE,kBAAC,IAAD,CACEW,IAAKS,EAAKE,OAAQtB,KAClBF,MAAOA,EACPG,IAAKmB,SAAF,UAAEA,EAAMC,mBAAR,iBAAE,EAAmBE,YAArB,iBAAE,EAAyBC,uBAA3B,aAAE,EAA0ClB,MAC/CN,KAAI,UAAEoB,EAAKE,cAAP,aAAE,EAAatB,KACnBD,KAAI,UAAEqB,EAAKC,mBAAP,aAAE,EAAkBtB,KACxBG,KAAI,UAAEkB,EAAKC,mBAAP,aAAE,EAAkBnB,WAKhC,yBAAKd,UAAU,iCACb,kBAAC,IAAD,CACEL,QAASA,EACTC,OAAQA,EACRC,YAAaA,EACbC,KAAI,OACJC,MAAO+B","file":"component---src-templates-blog-template-tsx-7cea25ea42efdeaf4f4b.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { AppProps } from '@/types'\n\nconst Pagination: React.FC<AppProps['pagination']> = ({\n  isFirst,\n  isLast,\n  currentPage,\n  type,\n  pages,\n}) => {\n  return (\n    <nav className=\"pagination\">\n      <ul className=\"pagination-list\">\n        {!isFirst && (\n          <li className=\"pagination-list__item prev\">\n            <Link\n              className=\"pagination__link\"\n              to={\n                currentPage === 2 ? `/${type}/` : `/${type}/${currentPage! - 1}`\n              }\n              rel=\"prev\"\n            >\n              <FontAwesomeIcon\n                icon={faChevronLeft}\n                className=\"pagination__icon prev\"\n              />\n              <span style={{ marginLeft: '0.5em' }}>Prev</span>\n            </Link>\n          </li>\n        )}\n        <li className=\"page-txt\">\n          page {currentPage} / {pages}\n        </li>\n        {!isLast && (\n          <li className=\"pagination-list__item next\">\n            <Link\n              to={`/${type}/${currentPage! + 1}/`}\n              className=\"pagination__link\"\n              rel=\"next\"\n            >\n              <span style={{ marginRight: '0.5em' }}>Next</span>\n              <FontAwesomeIcon\n                icon={faChevronRight}\n                className=\"pagination__icon next\"\n              />\n            </Link>\n          </li>\n        )}\n      </ul>\n    </nav>\n  )\n}\n\nexport default Pagination\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { AppProps } from '@/types'\n\nconst Item: React.FC<AppProps['item']> = ({ title, date, slug, src, tags }) => {\n  return (\n    <li>\n      <article itemScope itemType=\"http://schema.org/Article\">\n        <figure className=\"overflow-hidden rounded relative blog-list__imgwrap\">\n          <Link\n            to={`/blog${slug!}`}\n            className=\"block transition-transform duration-700 ease-out\"\n            itemProp=\"url\"\n          >\n            <Image fluid={src!} alt=\"\" />\n          </Link>\n          <p className=\"blog-list__date\">{date}</p>\n        </figure>\n        <h2 className=\"blog-list__ttl\">\n          <Link\n            to={`/blog${slug!}`}\n            itemProp=\"url\"\n            className=\"block hover:opacity-60 transition-opacity\"\n          >\n            <span itemProp=\"headline\">{title}</span>\n          </Link>\n        </h2>\n        <div className=\"mt-2 flex flex-wrap gap-1\">\n          {tags &&\n            tags.map((tag, index) => (\n              <Link\n                className=\"text-xs md:text-sm post-tag\"\n                to={`/tag/${tag}`}\n                key={index}\n              >\n                {tag}\n              </Link>\n            ))}\n        </div>\n      </article>\n    </li>\n  )\n}\n\nexport default Item\n","import React from 'react'\nimport { Link, graphql, PageProps } from 'gatsby'\nimport Image from 'gatsby-image'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport Bio from '@/components/Bio'\nimport Layout from '@/layouts/default'\nimport Seo from '@/components/seo'\nimport Item from '@/components/blog/item'\nimport Pagination from '@/components/pagination'\nimport { AppProps } from '@/types'\n\nconst BlogIndex: React.FC<\n  PageProps<GatsbyTypes.BlogPageQuery> & AppProps['template']\n> = ({ data, pageContext }) => {\n  const posts = data.allMarkdownRemark.nodes\n  const { isFirst, isLast, currentPage, blogPages } = pageContext\n\n  if (posts.length === 0) {\n    return (\n      <Layout title=\"BLOG\">\n        <Seo title=\"BLOG\" />\n        <p>No posts...</p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout title=\"BLOG\">\n      <Seo title=\"BLOG\" />\n      <section className=\"section blog\">\n        <div className=\"text-center\">\n          <h1 className=\"pb-4 mb-10 section__ttl\">記事</h1>\n        </div>\n        <ul className=\"blog-list\">\n          {posts.map(post => {\n            const title = post.frontmatter?.title || post.fields?.slug\n\n            return (\n              <Item\n                key={post.fields!.slug!}\n                title={title}\n                src={post?.frontmatter?.hero?.childImageSharp?.fluid}\n                slug={post.fields?.slug}\n                date={post.frontmatter?.date}\n                tags={post.frontmatter?.tags as any}\n              />\n            )\n          })}\n        </ul>\n        <div className=\"max-w-screen-sm mx-auto py-12\">\n          <Pagination\n            isFirst={isFirst!}\n            isLast={isLast!}\n            currentPage={currentPage!}\n            type={`blog`}\n            pages={blogPages!}\n          />\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogPage($limit: Int!, $skip: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY.MM.DD\")\n          title\n          description\n          hero {\n            childImageSharp {\n              fluid(maxWidth: 900) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n          tags\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}